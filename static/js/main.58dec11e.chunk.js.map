{"version":3,"sources":["../node_modules/peerjs/dist sync","App.js","HostApp.js","GuestApp.js","reportWebVitals.js","index.js","HostApp.module.css"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","App","useState","v4","hostUrl","url","window","location","href","format","query","host","clientUrl","HostApp","params","Url","stream","setStream","peer","setPeer","peerReady","setPeerReady","currentConn","setCurrentConn","refVideo","useRef","useEffect","disconnected","destroyed","destroy","newPeer","Peer","on","console","log","call","close","answer","undefined","reconnect","current","srcObject","className","css","container","ref","autoPlay","handleError","error","message","name","GuestApp","deviceInfos","setDeviceInfos","userStream","setUserStream","refVideoSource","videoSource","value","navigator","mediaDevices","enumerateDevices","then","devices","catch","constraints","audio","video","deviceId","exact","getUserMedia","conn","htmlFor","filter","deviceInfo","kind","map","index","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","searchParams","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8JAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,iICiCVC,MApCf,WAAgB,IAAD,EACAC,mBAASC,KAAfH,EADM,oBAEPI,EAAUC,IAAIR,QAAQS,OAAOC,SAASC,KAAMH,IAAII,OAAO,CAAEC,MAAO,CAAEV,KAAIW,KAAM,WAC5EC,EAAYP,IAAIR,QAAQS,OAAOC,SAASC,KAAMH,IAAII,OAAO,CAAEC,MAAO,CAAEV,SAE1E,OACE,8BACE,kCACE,gCACE,6BACE,6BAAK,+CAGT,kCACE,+BACE,qCACA,wCAEF,+BACE,6CACA,6BACE,mBAAGQ,KAAMJ,EAAT,SAAmBA,SAGvB,+BACE,8CACA,6BACE,mBAAGI,KAAMI,EAAT,SAAqBA,kB,gDCkCpBC,EA7DC,WACd,IAAMC,EAAS,IAAIC,IAAIT,OAAOC,SAASC,MAAM,GAAME,MAD/B,EAEQR,qBAFR,mBAEbc,EAFa,KAELC,EAFK,OAGIf,qBAHJ,mBAGbgB,EAHa,KAGPC,EAHO,OAIcjB,oBAAS,GAJvB,mBAIbkB,EAJa,KAIFC,EAJE,OAKkBnB,qBALlB,mBAKboB,EALa,KAKAC,EALA,KAMdC,EAAWC,iBAAO,MAgDxB,OA9CAC,qBAAU,WACR,IAAIR,GAASA,EAAKS,cAAiBT,EAAKU,UAAxC,CACA,IAAIV,GAASA,EAAKU,UAAlB,CAKIV,GAAMA,EAAKW,UAEf,IAAMC,EAAU,IAAIC,IAAKjB,EAAOd,IAsBhC,OApBA8B,EAAQE,GAAG,QAAQ,SAAAhC,GACjBqB,GAAa,GACbY,QAAQC,IAAR,gCAAqClC,OAGvC8B,EAAQE,GAAG,SAAS,kBAAMX,GAAa,MACvCS,EAAQE,GAAG,gBAAgB,kBAAMX,GAAa,MAE9CS,EAAQE,GAAG,QAAQ,SAAAG,GACjBF,QAAQC,IAAR,6BAAkCC,EAAKjB,OACnCI,GAAaA,EAAYc,QAC7BD,EAAKH,GAAG,UAAU,SAAAhB,GAChBC,EAAUD,MAEZmB,EAAKE,SACLd,EAAeY,MAGjBhB,EAAQW,GAED,WACDZ,IACFA,EAAKW,UACLV,OAAQmB,IAEVjB,GAAa,IAjCbH,EAAKqB,eAoCN,CAACnB,IAEJM,qBAAU,WACHV,IACLQ,EAASgB,QAAQC,UAAYzB,KAC5B,CAACA,IAGF,qBAAK0B,UAAWC,IAAIC,UAApB,SACE,uBAAOF,UAAWC,IAAI3B,OAAQ6B,IAAKrB,EAAUsB,UAAQ,OCrD3D,SAASC,EAAYC,GACnBf,QAAQC,IAAI,8CAA+Cc,EAAMC,QAASD,EAAME,MAGlF,IAyGeC,EAzGE,WACf,IAAMrC,EAAS,IAAIC,IAAIT,OAAOC,SAASC,MAAM,GAAME,MAD9B,EAGiBR,mBAAS,IAH1B,mBAGdkD,EAHc,KAGDC,EAHC,OAIenD,qBAJf,mBAIdoD,EAJc,KAIFC,EAJE,OAKGrD,qBALH,mBAKdgB,EALc,KAKRC,EALQ,OAMajB,oBAAS,GANtB,mBAMdkB,EANc,KAMHC,EANG,KAQfG,EAAWC,iBAAO,MAClB+B,EAAiB/B,iBAAO,MACxBgC,EAAcD,EAAehB,SAAWgB,EAAehB,QAAQkB,MAsErE,OApEAhC,qBAAU,WACRiC,UAAUC,aACPC,mBACAC,MAAK,SAAAC,GACJV,EAAeU,MAEhBC,MAAMjB,MAGXrB,qBAAU,WACR,IAAIR,GAASA,EAAKS,cAAiBT,EAAKU,UAAxC,CACA,IAAIV,GAASA,EAAKU,UAAlB,CAKIV,GAAMA,EAAKW,UAEf,IAAMC,EAAU,IAAIC,IAYpB,OAVAD,EAAQE,GAAG,QAAQ,SAAAhC,GACjBqB,GAAa,GACbY,QAAQC,IAAR,gCAAqClC,OAGvC8B,EAAQE,GAAG,SAAS,kBAAMX,GAAa,MACvCS,EAAQE,GAAG,gBAAgB,kBAAMX,GAAa,MAE9CF,EAAQW,GAED,WACDZ,IACFA,EAAKW,UACLV,OAAQmB,IAEVjB,GAAa,IAvBbH,EAAKqB,eA0BN,CAACnB,IAEJM,qBAAU,WACR,QAAoBY,IAAhBmB,EAAJ,CACA,IAAMQ,EAAc,CAClBC,OAAO,EACPC,MAAO,CAAEC,UAAUX,GAAc,CAAEY,MAAOZ,KAE5CE,UAAUC,aACPU,aAAaL,GACbH,MAAK,SAAA9C,GACJuC,EAAcvC,MAEfgD,MAAMjB,MACR,CAACU,IAEJ/B,qBAAU,WACR,GAAKN,GACAkC,EAAL,CACA9B,EAASgB,QAAQC,UAAYa,EAE7BrB,QAAQC,IAAR,yBAA8BpB,EAAOd,KACrC,IAAMuE,EAAOrD,EAAKiB,KAAKrB,EAAOd,GAAIsD,GAElC,OAAO,WACLiB,EAAKnC,YAGN,CAACtB,EAAOd,GAAIyD,EAAaH,EAAYlC,IAGtC,gCACE,sBAAKpB,GAAG,YAAR,UACE,8BACE,sCADF,mGAGA,sBAAK0C,UAAU,SAAf,UACE,uBAAO8B,QAAShB,EAAehB,QAA/B,4BACA,wBAAQK,IAAKW,EAAb,SACGJ,GACCA,EACGqB,QAAO,SAAAC,GAAU,MAAwB,eAApBA,EAAWC,QAChCC,KAAI,SAACF,EAAYG,GAAb,OACH,wBAAkCnB,MAAOgB,EAAWN,SAApD,SACGM,EAAWI,OAAX,iBAA8BD,IADpBH,EAAWN,qBAOpC,uBAAOvB,IAAKrB,EAAUsB,UAAQ,QCpGrBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCERO,EAAgB,IAAIxE,IAAIT,OAAOC,SAASC,MAAM,GAAOE,MAEvD6E,EAAavF,GACW,SAAtBuF,EAAa5E,KACf6E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI5BJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO5Bb,K,kBCtCAjF,EAAOC,QAAU,CAAC,OAAS,2B","file":"static/js/main.58dec11e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 23;","import \"./App.css\";\nimport { useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport url from \"url\";\n\nfunction App() {\n  const [id] = useState(v4);\n  const hostUrl = url.resolve(window.location.href, url.format({ query: { id, host: \"true\" } }));\n  const clientUrl = url.resolve(window.location.href, url.format({ query: { id } }));\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <td>{\"please use these urls for each stream:\"}</td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>For</td>\n            <td>url</td>\n          </tr>\n          <tr>\n            <td>Stream host</td>\n            <td>\n              <a href={hostUrl}>{hostUrl}</a>\n            </td>\n          </tr>\n          <tr>\n            <td>Stream guest</td>\n            <td>\n              <a href={clientUrl}>{clientUrl}</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","import Peer from \"peerjs\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Url from \"url-parse\";\r\nimport css from \"./HostApp.module.css\";\r\n\r\nconst HostApp = () => {\r\n  const params = new Url(window.location.href, true).query;\r\n  const [stream, setStream] = useState();\r\n  const [peer, setPeer] = useState();\r\n  const [peerReady, setPeerReady] = useState(false);\r\n  const [currentConn, setCurrentConn] = useState();\r\n  const refVideo = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (peer && !peer.disconnected && !peer.destroyed) return;\r\n    if (peer && !peer.destroyed) {\r\n      peer.reconnect();\r\n      return;\r\n    }\r\n\r\n    if (peer) peer.destroy();\r\n\r\n    const newPeer = new Peer(params.id);\r\n\r\n    newPeer.on(\"open\", id => {\r\n      setPeerReady(true);\r\n      console.log(`client ready with ID: ${id}`);\r\n    });\r\n\r\n    newPeer.on(\"error\", () => setPeerReady(false));\r\n    newPeer.on(\"disconnected\", () => setPeerReady(false));\r\n\r\n    newPeer.on(\"call\", call => {\r\n      console.log(`recieved call from ${call.peer}`);\r\n      if (currentConn) currentConn.close();\r\n      call.on(\"stream\", stream => {\r\n        setStream(stream);\r\n      });\r\n      call.answer();\r\n      setCurrentConn(call);\r\n    });\r\n\r\n    setPeer(newPeer);\r\n\r\n    return () => {\r\n      if (peer) {\r\n        peer.destroy();\r\n        setPeer(undefined);\r\n      }\r\n      setPeerReady(false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [peerReady]);\r\n\r\n  useEffect(() => {\r\n    if (!stream) return;\r\n    refVideo.current.srcObject = stream;\r\n  }, [stream]);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <video className={css.stream} ref={refVideo} autoPlay></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HostApp;\r\n","/*\r\nBased on this webrtc sample https://github.com/webrtc/samples/tree/gh-pages/src/content/devices/input-output\r\n*/\r\n\r\nimport Peer from \"peerjs\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Url from \"url-parse\";\r\n\r\nfunction handleError(error) {\r\n  console.log(\"navigator.MediaDevices.getUserMedia error: \", error.message, error.name);\r\n}\r\n\r\nconst GuestApp = () => {\r\n  const params = new Url(window.location.href, true).query;\r\n\r\n  const [deviceInfos, setDeviceInfos] = useState([]);\r\n  const [userStream, setUserStream] = useState();\r\n  const [peer, setPeer] = useState();\r\n  const [peerReady, setPeerReady] = useState(false);\r\n\r\n  const refVideo = useRef(null);\r\n  const refVideoSource = useRef(null);\r\n  const videoSource = refVideoSource.current && refVideoSource.current.value;\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices\r\n      .enumerateDevices()\r\n      .then(devices => {\r\n        setDeviceInfos(devices);\r\n      })\r\n      .catch(handleError);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (peer && !peer.disconnected && !peer.destroyed) return;\r\n    if (peer && !peer.destroyed) {\r\n      peer.reconnect();\r\n      return;\r\n    }\r\n\r\n    if (peer) peer.destroy();\r\n\r\n    const newPeer = new Peer();\r\n\r\n    newPeer.on(\"open\", id => {\r\n      setPeerReady(true);\r\n      console.log(`client ready with ID: ${id}`);\r\n    });\r\n\r\n    newPeer.on(\"error\", () => setPeerReady(false));\r\n    newPeer.on(\"disconnected\", () => setPeerReady(false));\r\n\r\n    setPeer(newPeer);\r\n\r\n    return () => {\r\n      if (peer) {\r\n        peer.destroy();\r\n        setPeer(undefined);\r\n      }\r\n      setPeerReady(false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [peerReady]);\r\n\r\n  useEffect(() => {\r\n    if (videoSource === undefined) return;\r\n    const constraints = {\r\n      audio: false,\r\n      video: { deviceId: videoSource ? { exact: videoSource } : true },\r\n    };\r\n    navigator.mediaDevices\r\n      .getUserMedia(constraints)\r\n      .then(stream => {\r\n        setUserStream(stream);\r\n      })\r\n      .catch(handleError);\r\n  }, [videoSource]);\r\n\r\n  useEffect(() => {\r\n    if (!peerReady) return;\r\n    if (!userStream) return;\r\n    refVideo.current.srcObject = userStream;\r\n\r\n    console.log(`calling peerId ${params.id}`);\r\n    const conn = peer.call(params.id, userStream); // returns host media but unused\r\n\r\n    return ()=>{\r\n      conn.close();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params.id, videoSource, userStream, peerReady]);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"container\">\r\n        <p>\r\n          <b>Note:</b> without permission, the browser will restrict the available devices to at most one per type.\r\n        </p>\r\n        <div className=\"select\">\r\n          <label htmlFor={refVideoSource.current}>Video source: </label>\r\n          <select ref={refVideoSource}>\r\n            {deviceInfos &&\r\n              deviceInfos\r\n                .filter(deviceInfo => deviceInfo.kind === \"videoinput\")\r\n                .map((deviceInfo, index) => (\r\n                  <option key={deviceInfo.deviceId} value={deviceInfo.deviceId}>\r\n                    {deviceInfo.label || `camera ${index}`}\r\n                  </option>\r\n                ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <video ref={refVideo} autoPlay />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestApp;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport HostApp from \"./HostApp\";\nimport GuestApp from \"./GuestApp\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Url from \"url-parse\";\n\nconst searchParams = (new Url(window.location.href, true)).query;\n\nif (searchParams.id) {\n  if (searchParams.host === \"true\") {\n    ReactDOM.render(\n      <React.StrictMode>\n        <HostApp />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  } else {\n    ReactDOM.render(\n      <React.StrictMode>\n        <GuestApp />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  }\n} else {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stream\":\"HostApp_stream__KfcOx\"};"],"sourceRoot":""}